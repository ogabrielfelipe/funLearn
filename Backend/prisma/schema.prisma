// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "../Documentation/ERD.png"
  theme = "neutral"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Administrator {
  id       String @id @default(uuid())
  name     String @db.VarChar(155)
  username String @unique @db.VarChar(50)
  password String @db.VarChar(155)
  active   Boolean @default(true)
  @@map("administrator")
}

model Teacher {
  id       String @id @default(uuid())
  name     String @db.VarChar(155)
  username String @unique @db.VarChar(50)
  password String @db.VarChar(155)
  active   Boolean @default(true)
  team     Team[]

  @@map("teacher")
}

model Team {
  id     String  @id @default(uuid())
  name   String  @unique @db.VarChar(155)
  active Boolean @default(true)

  teacherID String
  teacher   Teacher @relation(fields: [teacherID], references: [id])

  students StudantsOnTeams[]

  @@map("team")
}

model Studant {
  id       String @id @default(uuid())
  name     String @db.VarChar(155)
  register String @unique @db.VarChar(50)
  password String @db.VarChar(155)
  active   Boolean @default(true)

  teams     StudantsOnTeams[]
  positions StudantOnPositions[]

  @@map("studant")
}

model StudantsOnTeams {
  studantID String
  student   Studant @relation(fields: [studantID], references: [id])
  teamID    String
  team      Team    @relation(fields: [teamID], references: [id])

  @@id([studantID, teamID])

  @@map("studants_on_teams")
}

model Position {
  id       String  @id @default(uuid())
  finish   Boolean @default(true)
  pointing Int
  score    Int

  askID    String
  ask      Ask     @relation(fields: [askID], references: [id])
  studants StudantOnPositions[]

  @@map("position")
}

model StudantOnPositions {
  studantID  String
  student    Studant  @relation(fields: [studantID], references: [id])
  positionID String
  position   Position @relation(fields: [positionID], references: [id])

  @@id([studantID, positionID])

  @@map("studant_on_positions")
}

model Ask {
  id       String  @id @default(uuid())
  question String  @db.VarChar(512)
  active   Boolean @default(true)
  image    String  @db.VarChar(155)
  level    Level   @default(INITIAL)

  position Position[]
  answer   Answer[]

  @@map("ask")
}

enum Level {
  INITIAL
  INTERMEDIARY
  ADVANCED
}

model Answer {
  id          String  @id @default(uuid())
  description String  @db.VarChar(255)
  correct     Boolean @default(false)

  askID       String
  ask         Ask @relation(fields: [askID], references: [id])

  @@map("answer")
}
