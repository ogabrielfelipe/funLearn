{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API - funLearn",
    "description": "Documentação contendo detalhes de como utilizar e como configurar as APIs a serem utilizadas pelo front-end."
  },
  "host": "localhost:3333",
  "basePath": "/",
  "tags": [
    {
      "name": "Administrator",
      "description": "Endpoints"
    },
    {
      "name": "Teacher",
      "description": "Endpoints"
    },
    {
      "name": "Studant",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {},
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/auth": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para realizar o login do Administrador. \\n token é enviado no HEADER da resposta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username, password",
            "in": "body",
            "description": " username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/AuthAdministrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso. \n  Token é passado pelo header, nome da variável: \"x-access-token\". \n   \n Token com tempo de validade de 1 hora.  ",
            "schema": {
              "$ref": "#/definitions/AuthAdministratorRes"
            }
          },
          "401": {
            "description": "Nome de usuário ou senha incorreta"
          },
          "403": {
            "description": "Usuário inativo."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/admin": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para cadastrar um novo usuário administrador.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, username, password",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário \n   username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrador cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AddAdministrator"
            }
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para alterar o cadastro do Administrador.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id, name, password, active",
            "in": "body",
            "description": " id: Deverá ser preenchido com o identificador do usuário; \n   name: Deverá ser preenchido com o nome do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com aspas vaizas. ",
            "schema": {
              "$ref": "#/definitions/AdministratorChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrador alterado com sucesso.",
            "schema": {
              "$ref": "#/definitions/AdministratorChangeRes"
            }
          },
          "400": {
            "description": "Administrador não encontrado."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teacher/auth": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para realizar o login do professor. \\n token é enviado no HEADER da resposta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username, password",
            "in": "body",
            "description": " username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/AuthTeacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso. \n  Token é passado pelo header, nome da variável: \"x-access-token\". \n   \n Token com tempo de validade de 15 dias.  ",
            "schema": {
              "$ref": "#/definitions/AuthTeacherRes"
            }
          },
          "401": {
            "description": "Nome de usuário ou senha incorreta"
          },
          "403": {
            "description": "Usuário inativo."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teacher": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para cadastrar um novo usuário professor.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, username, password, active",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   username: Deverá ser preenchido com o nome de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login; \n   active: Deverá ser preenchido com o status do usuário. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário professor cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AddTeacher"
            }
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para alterar o cadastro do professor.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id, name, password, active",
            "in": "body",
            "description": " id: Deverá ser preenchido com o identificador do usuário; \n   name: Deverá ser preenchido com o nome do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com aspas vaizas. ",
            "schema": {
              "$ref": "#/definitions/TeacherChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor autenticado com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeacherChangeRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Professor não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/studant": {
      "post": {
        "tags": [
          "Studant"
        ],
        "description": "Endpoint para cadastrar um novo usuário Estudante.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, register, password, active, teamID",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   register: Deverá ser preenchido com o numero de matrícula do aluno a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login; \n   active: Deverá ser preenchido com o status do usuário. \n   teamID: Deverá ser preenchido com o identificador da turma.",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Studant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário estudante cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AddStudant"
            }
          },
          "400": {
            "description": "Turma não encontrada ou Inativa"
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Studant"
        ],
        "description": "Endpoint para alterar o cadastro do Aluno.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "studantID, name, password, teamID, active",
            "in": "body",
            "description": " studantID: Deverá ser preenchido com o identificador do Aluno; \n   name: Deverá ser preenchido com o nome do aluno, caso queira que seja alterado ou deixe com aspas duplas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com sapas duplas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com null. ",
            "schema": {
              "$ref": "#/definitions/StudantChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrador alterado com sucesso.",
            "schema": {
              "$ref": "#/definitions/StudantChangeRes"
            }
          },
          "401": {
            "description": "É necessário preencher a turma."
          },
          "403": {
            "description": "Turma Inativa."
          },
          "404": {
            "description": "Aluno ou Turma não encontrado ou Aluno não encontrado no relacionamento com a Turma."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "Studant"
        ],
        "description": "Endpoint para buscar os detalhes do cadastro do aluno.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "studantID",
            "in": "query",
            "description": " Deverá ser preenchido com o identificador do Aluno;",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindStudant"
            }
          },
          "401": {
            "description": "É necessário preencher o identificador do Aluno."
          },
          "404": {
            "description": "Aluno não encontrado."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/studant/many": {
      "post": {
        "tags": [
          "Studant"
        ],
        "description": "Endpoint para cadastrar usuários Estudantes através da importação de arquivo.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, teamID",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   teamID: Deverá ser preenchido com o identificador da turma.",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/StudantFile"
            }
          },
          {
            "name": "file",
            "in": "file",
            "description": " file: Arquivo que deverá ser importado seguindo o modelo disponibilizado para importar os alunos.",
            "requerid": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuários cadastrados com sucesso"
          },
          "400": {
            "description": "Turma não encontrada; \nTurma Inativa; \n Arquivo não importado."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/studants": {
      "get": {
        "tags": [
          "Studant"
        ],
        "description": "Endpoint para listar todos os estudantes. Este Endpoint pega o usuário da requisição e filtra somente os alunos que estão vinculados as turma do professor que está efetuando a busca, essa funcionalidade fica suspensa para os usuáruios administradores.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": " Deverá ser preenchido com o nome do aluno do Aluno, função não diferencia Maiúsculo de Minúsculo e nem de Ordem de escrita (Like %_%).",
            "schema": {
              "$ref": "#/definitions/FindStudants"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindStudantsRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/team": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "active": {
                  "example": "any"
                },
                "teacherID": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    }
  },
  "definitions": {
    "Teacher": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "TeacherChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues "
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "TeacherChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AuthTeacher": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AuthTeacherRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AddTeacher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "password"
      ]
    },
    "Administrator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "username": {
          "type": "string",
          "example": "barbara"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AddAdministrator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "username": {
          "type": "string",
          "example": "barbara"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "password"
      ]
    },
    "AuthAdministrator": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AuthAdministratorRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AdministratorChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues "
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AdministratorChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "Studant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "number",
          "example": 120998977234
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      }
    },
    "StudantFile": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "example": "********"
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      }
    },
    "AddStudant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "object",
          "properties": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                },
                "name": {
                  "type": "string",
                  "example": "1º ano - Informática"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "StudantChange": {
      "type": "object",
      "properties": {
        "studantID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      },
      "required": [
        "studantID",
        "name",
        "teamID"
      ]
    },
    "StudantChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "object",
          "properties": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                },
                "name": {
                  "type": "string",
                  "example": "1º ano - Informática"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "FindStudant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "team": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                  },
                  "name": {
                    "type": "string",
                    "example": "1º ano - Informática"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "teacher": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                      },
                      "name": {
                        "type": "string",
                        "example": "Fulano da Silva Rodrigues"
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "position": {
          "type": "array",
          "example": [],
          "items": {}
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "FindStudants": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "gabriel OU parte do nome OU aspas vazia"
        }
      }
    },
    "FindStudantsRes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "name": {
            "type": "string",
            "example": "Barbara M. Dalton"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                    },
                    "name": {
                      "type": "string",
                      "example": "1º ano - Informática"
                    },
                    "active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    }
  }
}