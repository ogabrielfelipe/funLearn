{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API - funLearn",
    "description": "Documentação contendo detalhes de como utilizar e como configurar as APIs a serem utilizadas pelo front-end."
  },
  "host": "localhost:3333",
  "basePath": "/",
  "tags": [
    {
      "name": "Administrator",
      "description": "Endpoints"
    },
    {
      "name": "Teacher",
      "description": "Endpoints"
    },
    {
      "name": "student",
      "description": "Endpoints"
    },
    {
      "name": "Team",
      "description": "Endpoint"
    },
    {
      "name": "Ask",
      "description": "Endpoint"
    },
    null,
    {
      "name": "Answer",
      "description": "Endpoint"
    },
    {
      "name": "Home",
      "description": "Endpoint"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "description": "Endpoint da tela inicial das APIs do Sistema FunLearn.",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/administrator/auth/session": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/administrator/auth": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para realizar o login do Administrador. \\n token é enviado no HEADER da resposta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username, password",
            "in": "body",
            "description": " username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/AuthAdministrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso. \n  Token é passado pelo header, nome da variável: \"x-access-token\". \n   \n Token com tempo de validade de 1 hora.  ",
            "schema": {
              "$ref": "#/definitions/AuthAdministratorRes"
            }
          },
          "401": {
            "description": "Nome de usuário ou senha incorreta"
          },
          "403": {
            "description": "Usuário inativo."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/administrator": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para cadastrar um novo usuário administrador.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, username, password",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário \n   username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrador cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AddAdministrator"
            }
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para alterar o cadastro do administrador.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id, name, password, active",
            "in": "body",
            "description": " id: Deverá ser preenchido com o identificador do usuário; \n   name: Deverá ser preenchido com o nome do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com aspas vaizas. ",
            "schema": {
              "$ref": "#/definitions/AdministratorChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrator alterado com sucesso.",
            "schema": {
              "$ref": "#/definitions/AdministratorChangeRes"
            }
          },
          "400": {
            "description": "administrator não encontrado."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para buscar os detalhes do cadastro do administrator. Busca só é efetuada somente com usuários administradores.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "adminID",
            "in": "query",
            "description": " Deverá ser preenchido com o identificador do administrador;",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindAdministrator"
            }
          },
          "401": {
            "description": "Identificador do registro é necessário. \n Usuário não tem permissão para buscar os dados."
          },
          "404": {
            "description": "Usuário administrator não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/adminstrators": {
      "get": {
        "tags": [
          "Administrator"
        ],
        "description": "Endpoint para listar cadastro de todos ox administratores ou filtrar pelo nome. Busca só é efetuada somente com usuários administratores.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": " Deverá ser preenchido com o nome do administrator, caso queira listar todos deixar o campo com aspas vazias.",
            "schema": {
              "$ref": "#/definitions/FindAdministratorsReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindAdministrators"
            }
          },
          "401": {
            "description": "Usuário não tem permissão para buscar os dados."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teacher/auth/session": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/teacher/auth": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para realizar o login do professor. \\n token é enviado no HEADER da resposta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username, password",
            "in": "body",
            "description": " username: Deverá ser preenchido com o nomde de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/AuthTeacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso. \n  Token é passado pelo header, nome da variável: \"x-access-token\". \n  É passado tambem o tipo de usuário pelo Header: \"x-access-type\" \n  Token com tempo de validade de 15 dias.  ",
            "schema": {
              "$ref": "#/definitions/AuthTeacherRes"
            }
          },
          "401": {
            "description": "Nome de usuário ou senha incorreta"
          },
          "403": {
            "description": "Usuário inativo."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teacher": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para cadastrar um novo usuário professor.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, username, password, active",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   username: Deverá ser preenchido com o nome de usuário a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login; \n   active: Deverá ser preenchido com o status do usuário. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário professor cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AddTeacher"
            }
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para alterar o cadastro do professor.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id, name, password, active",
            "in": "body",
            "description": " id: Deverá ser preenchido com o identificador do usuário; \n   name: Deverá ser preenchido com o nome do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com aspas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com aspas vaizas. ",
            "schema": {
              "$ref": "#/definitions/TeacherChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor autenticado com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeacherChangeRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Professor não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para buscar os detalhes do cadastro do Professor. Para usuários Professores so poderá buscar os detalhes do cadastro do mesmo. Para Usuários administradores poderá ver os detalhes de todos os cadastros.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "teacherID",
            "in": "query",
            "description": " Deverá ser preenchido com o identificador do Professor;",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindTeacher"
            }
          },
          "401": {
            "description": "Identificador do registro é necessário. \n Usuário não tem permissão para buscar os dados."
          },
          "404": {
            "description": "Usuário Professor não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teachers": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "description": "Endpoint para listar cadastro de todos os professores ou filtrar pelo nome. Busca só é efetuada somente com usuários administratores.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": " Deverá ser preenchido com o nome do professor, caso queira listar todos deixar o campo com aspas vazias.",
            "schema": {
              "$ref": "#/definitions/FindTeachersReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindTeachers"
            }
          },
          "401": {
            "description": "Usuário não tem permissão para buscar os dados."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/student/auth/session": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/student/auth": {
      "post": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para realizar o login do aluno. Token e o tipo de login é enviado no HEADER da resposta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "register, password",
            "in": "body",
            "description": " register: Deverá ser preenchido com numero de matricula do aluno a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login. ",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/Authstudent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso. \n  Token é passado pelo header, nome da variável: \"x-access-token\". \n  É passado tambem o tipo de usuário pelo Header: \"x-access-type\" \n  Token com tempo de validade de 15 dias.  ",
            "schema": {
              "$ref": "#/definitions/AuthstudentRes"
            }
          },
          "401": {
            "description": "Número de matrícula ou senha incorreta"
          },
          "403": {
            "description": "Aluno inativo."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/student": {
      "post": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para cadastrar um novo usuário Estudente.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, register, password, active, teamID",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   register: Deverá ser preenchido com o numero de matrícula do aluno a ser utilizado para fazer o login; \n    password: Deverá ser preenchido com a senha a ser utilziada para realizar o login; \n   active: Deverá ser preenchido com o status do usuário. \n   teamID: Deverá ser preenchido com o identificador da turma.",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário estudente cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Addstudent"
            }
          },
          "400": {
            "description": "Turma não encontrada ou Inativa"
          },
          "401": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para alterar o cadastro do Aluno.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "studentID, name, password, teamID, active",
            "in": "body",
            "description": " studentID: Deverá ser preenchido com o identificador do Aluno; \n   name: Deverá ser preenchido com o nome do aluno, caso queira que seja alterado ou deixe com aspas duplas vaizas; \n    password: Deverá ser preenchido com a nova senha do usuário, caso queira que seja alterado ou deixe com sapas duplas vaizas; \n    active: Deverá ser preenchido com o status do usuário, caso queira que seja alterado ou deixe com null. ",
            "schema": {
              "$ref": "#/definitions/studentChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário administrator alterado com sucesso.",
            "schema": {
              "$ref": "#/definitions/studentChangeRes"
            }
          },
          "401": {
            "description": "É necessário preencher a turma."
          },
          "403": {
            "description": "Turma Inativa."
          },
          "404": {
            "description": "Aluno ou Turma não encontrado ou Aluno não encontrado no relacionamento com a Turma."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para buscar os detalhes do cadastro do aluno.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "studentID",
            "in": "query",
            "description": " Deverá ser preenchido com o identificador do Aluno;",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Findstudent"
            }
          },
          "401": {
            "description": "É necessário preencher o identificador do Aluno."
          },
          "404": {
            "description": "Aluno não encontrado."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/student/many": {
      "post": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para cadastrar usuários Estudentes através da importação de arquivo.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, teamID",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome do usuário; \n   teamID: Deverá ser preenchido com o identificador da turma.",
            "requerid": true,
            "schema": {
              "$ref": "#/definitions/studentFile"
            }
          },
          {
            "name": "file",
            "in": "file",
            "description": " file: Arquivo que deverá ser importado seguindo o modelo disponibilizado para importar os alunos.",
            "requerid": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuários cadastrados com sucesso",
            "schema": {
              "$ref": "#/definitions/CreateManystudent200"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Turma não encontrada; \nTurma Inativa; \n Arquivo não importado. \n Turma ou Senha não enviada na requisição "
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados. \n **É necessário verificar o atributo CODE para verificar o status da requisição",
            "schema": {
              "$ref": "#/definitions/CreateManystudents500"
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para listar todos os estudentes. Este Endpoint pega o usuário da requisição e filtra somente os alunos que estão vinculados as turma do professor que está efetuando a busca, essa funcionalidade fica suspensa para os usuáruios administratores.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": " Deverá ser preenchido com o nome do aluno do Aluno, função não diferencia Maiúsculo de Minúsculo e nem de Ordem de escrita (Like %_%).",
            "schema": {
              "$ref": "#/definitions/Findstudents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/FindstudentsRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/student/modelo-criacao": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Endpoint para fazer o download do modelo de importação dos alunos.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo baixado com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/team": {
      "post": {
        "tags": [
          "Team"
        ],
        "description": "Endpoint para cadastrar uma nova turma.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name, teacherID, active",
            "in": "body",
            "description": " name: Deverá ser preenchido com o nome da Turma; \n   teacherID: Deverá ser preenchido com o identificador do professor a ser vinculado na turma; \n    active: Deverá ser preenchido com o status da turma, se está ativa ou não. ",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turma cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeamRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "403": {
            "description": "Professor inativo."
          },
          "404": {
            "description": "Professor não encontrado."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "description": "Endpoint para alterar o cadastro da turma.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id,name, teacherID, active",
            "in": "body",
            "description": " id: Deverá ser preenchido com o identificador da turma que deseja realizar a alteração; \n    name: Deverá ser preenchido com o nome da Turma; \n   teacherID: Deverá ser preenchido com o identificador do professor a ser vinculado na turma; \n    active: Deverá ser preenchido com o status da turma, se está ativa ou não. ",
            "schema": {
              "$ref": "#/definitions/TeamChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turma cadastrada com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeamRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "403": {
            "description": "Professor inativo."
          },
          "404": {
            "description": "Turma não encontrada ou Professor não encontrado."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "Team"
        ],
        "description": "Endpoint para buscar detalhes do cadastro da turma.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "teamID",
            "in": "query",
            "description": "Deverá ser preenchido com o identificador da turma que deseja realizar a busca.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeamRes"
            }
          },
          "401": {
            "description": "É necessário informar uma turma."
          },
          "404": {
            "description": "Turma não encontrada."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "Endpoint para listar as turmas cadastradas.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": "Deverá ser preenchido com o nome da turma, função não diferencia Maiúsculo de Minúsculo e nem de Ordem de escrita (Like %_%).",
            "schema": {
              "$ref": "#/definitions/TeamFind"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca realizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/TeamsRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/ask": {
      "post": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para cadastrar uma nova pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AskResp"
            },
            "description": "Pergunta cadastrada com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "403": {
            "description": "Número de alternativas diferente de 4.\nDeve haver uma resposta correta.\nTipo do campo description incorreto.\nTipo do campo correct incorreto."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para Alterar o cadastro pergunta. Essa alteração só ocorre para os campos question e active, os demais são alterados individualmente.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "askID, question, active",
            "in": "body",
            "description": "askID: Deverá ser informado com o identificador da pergunta; \n    question: Deverá ser preenchido com enunciado da pergunta; \n   active: Deverá ser preenchido com o status da pergunta, se está ativa ou não.",
            "schema": {
              "$ref": "#/definitions/AskChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pergunta alterada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AskResp"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "403": {
            "description": "Número de alternativas diferente de 4.\nDeve haver uma resposta correta.\nPergunta possui mais de uma alternativa correta."
          },
          "404": {
            "description": "Pergunta não encontrada.\nNão foi identificado uma resposta correta para a pergunta."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "get": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para dedtalhar o cadastro da pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "askID",
            "in": "query",
            "description": " Deverá informar o identificador da pergunta que deseja detalhar.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AskResp"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/asks": {
      "get": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para listar todas as perguntas cadastradas ou apenas a que utilizar o filtro.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "question",
            "in": "body",
            "description": " Deverá informar o enunciado da questão, podendo digitar parte do nome (LIKE %_%) ou para pesquisar todos deixar com aspas vaizas.",
            "schema": {
              "$ref": "#/definitions/AskFindMany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AskFindManyRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/ask/image": {
      "put": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para alterar a imagem vinculada a pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "askID",
            "in": "query",
            "description": "Deverá ser preenchido com o identificador da pergunta.",
            "requerid": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "file",
            "description": "deverá ser informado com a imagem que deseja vincular na pergunta.",
            "requerid": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Imagem alterada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Ask2"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Imagem não encontrada. \nPergunta não encontrada."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados."
          }
        }
      },
      "delete": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para excluir a imagem vinculada a pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "askID",
            "in": "query",
            "description": "Deverá ser preenchido com o identificador da pergunta.",
            "requerid": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "imagem excluida com sucesso.",
            "schema": {
              "$ref": "#/definitions/Ask2"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Pergunta não possui imagem para excluir. \nImagem não encontrada."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados. \nNão foi possível realizar a exclusão."
          }
        }
      },
      "get": {
        "tags": [
          "Ask"
        ],
        "description": "Endpoint para exibir a imagem que deseja visualizar.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name-image",
            "in": "query",
            "description": "Deverá ser preenchido com o nome da imagem que está cadastrada na pergunta.",
            "requerid": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca efetuada com sucesso e exibe a imagem."
          },
          "404": {
            "description": "Imagem não encontrada."
          }
        }
      }
    },
    "/answer": {
      "post": {
        "tags": [
          "Answer"
        ],
        "description": "Endpoint para cadastrar uma resposta para a pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "answerID, description, correct",
            "in": "body",
            "description": "askID: Deverá ser informado com o identificador da pergunta; \n    description: Deverá ser preenchido com a descrição da resposta; \n   correct: Deverá ser preenchido com o tipo da resposta se é correta ou não.",
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AnswerChangeRes"
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "403": {
            "description": "Número de alternativas diferente de 4.\nDeve haver uma resposta correta.\nTipo do campo description incorreto.\nTipo do campo correct incorreto."
          },
          "404": {
            "description": "Token não encontrado"
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "put": {
        "tags": [
          "Answer"
        ],
        "description": "Endpoint para Alterar o cadastro da resposta da pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "answerID, description, correct",
            "in": "body",
            "description": "answerID: Deverá ser informado com o identificador da resposta; \n    description: Deverá ser preenchido com a descrição da resposta; \n   correct: Deverá ser preenchido com o tipo da resposta se é correta ou não.",
            "schema": {
              "$ref": "#/definitions/AnswerChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta alterada com sucesso.",
            "schema": {
              "$ref": "#/definitions/AnswerChangeRes"
            }
          },
          "401": {
            "description": "Já existe uma alteranativa correta para a pergunta vinculada."
          },
          "404": {
            "description": "Resposta não encontrada."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      },
      "delete": {
        "tags": [
          "Answer"
        ],
        "description": "Endpoint para excluir uma resposta da pergunta.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "answerID",
            "in": "query",
            "description": "answerID: Deverá ser informado com o identificador da resposta.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta excluida com sucesso."
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Resposta não excluida."
          },
          "500": {
            "description": "Relacionado a erro de persistência no banco de dados ou erros internos."
          }
        }
      }
    },
    "/theme": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "teacherID": {
                  "example": "any"
                },
                "teams": {
                  "example": "any"
                },
                "active": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "put": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "teacherID": {
                  "example": "any"
                },
                "active": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "get": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/themes": {
      "get": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/theme/connectTeam": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "teamID": {
                  "example": "any"
                },
                "themeID": {
                  "example": "any"
                },
                "visible": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/theme/disconnectTeam": {
      "delete": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "teamID": {
                  "example": "any"
                },
                "themeID": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/tip": {
      "post": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "askID": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "visible": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "put": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "visible": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "delete": {
        "description": "Middleware para autenticação do usuário",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    }
  },
  "definitions": {
    "Teacher": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "TeacherChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues "
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "TeacherChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AuthTeacher": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AuthTeacherRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AddTeacher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "password"
      ]
    },
    "FindTeacher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "team": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
              },
              "name": {
                "type": "string",
                "example": "1º ano - Informática"
              },
              "active": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "FindTeachersReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        }
      },
      "required": [
        "name"
      ]
    },
    "FindTeachers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "name": {
            "type": "string",
            "example": "Fulano da Silva Rodrigues"
          },
          "username": {
            "type": "string",
            "example": "fulano"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "team": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                },
                "name": {
                  "type": "string",
                  "example": "1º ano - Informática"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "username",
          "active"
        ]
      }
    },
    "Administrator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "username": {
          "type": "string",
          "example": "barbara"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AddAdministrator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "username": {
          "type": "string",
          "example": "barbara"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "password"
      ]
    },
    "AuthAdministrator": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AuthAdministratorRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "AdministratorChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues "
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AdministratorChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "FindAdministrator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "username": {
          "type": "string",
          "example": "fulano"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "username",
        "active"
      ]
    },
    "FindAdministratorsReq": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        }
      },
      "required": [
        "name"
      ]
    },
    "FindAdministrators": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "name": {
            "type": "string",
            "example": "Fulano da Silva Rodrigues"
          },
          "username": {
            "type": "string",
            "example": "fulano"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "name",
          "username",
          "active"
        ]
      }
    },
    "student": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "number",
          "example": 120998977234
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      }
    },
    "studentFile": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "example": "********"
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      }
    },
    "Addstudent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "object",
          "properties": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                },
                "name": {
                  "type": "string",
                  "example": "1º ano - Informática"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Authstudent": {
      "type": "object",
      "properties": {
        "register": {
          "type": "number",
          "example": 12332112345
        },
        "password": {
          "type": "string",
          "example": "********"
        }
      }
    },
    "AuthstudentRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Fulano da Silva Rodrigues"
        },
        "register": {
          "type": "string",
          "example": "12332112345"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "name",
        "register",
        "active"
      ]
    },
    "studentChange": {
      "type": "object",
      "properties": {
        "studentID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "password": {
          "type": "string",
          "example": "********"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teamID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        }
      },
      "required": [
        "studentID",
        "name",
        "teamID"
      ]
    },
    "studentChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "object",
          "properties": {
            "team": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                },
                "name": {
                  "type": "string",
                  "example": "1º ano - Informática"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Findstudent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "Barbara M. Dalton"
        },
        "register": {
          "type": "string",
          "example": "120998977234"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "team": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                  },
                  "name": {
                    "type": "string",
                    "example": "1º ano - Informática"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "teacher": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                      },
                      "name": {
                        "type": "string",
                        "example": "Fulano da Silva Rodrigues"
                      },
                      "active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "position": {
          "type": "array",
          "example": [],
          "items": {}
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Findstudents": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "gabriel OU parte do nome OU aspas vazia"
        }
      }
    },
    "FindstudentsRes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "name": {
            "type": "string",
            "example": "Barbara M. Dalton"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
                    },
                    "name": {
                      "type": "string",
                      "example": "1º ano - Informática"
                    },
                    "active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    },
    "CreateManystudents500": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "example": "Error"
        },
        "code": {
          "type": "number",
          "example": 500
        },
        "description": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "example": "P2002"
            },
            "clientVersion": {
              "type": "string",
              "example": "4.3.1"
            },
            "meta": {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string",
                  "example": "student_register_key"
                }
              }
            }
          }
        }
      }
    },
    "CreateManystudent200": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "example": "Success"
        },
        "code": {
          "type": "number",
          "example": 200
        },
        "description": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Cadastro efetuado com sucesso."
            },
            "count": {
              "type": "number",
              "example": 3
            }
          }
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "1º Ano - Técnico em Informática"
        },
        "teacherID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "TeamFind": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "1º Ano - Técnico em Informática"
        }
      }
    },
    "TeamRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "1º Ano - Técnico em Informática"
        },
        "teacherID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "teacher": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
            },
            "name": {
              "type": "string",
              "example": "Fulano da Silva Rodrigues"
            },
            "active": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "required": [
        "name",
        "teacherID",
        "active",
        "teacher"
      ]
    },
    "TeamChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "name": {
          "type": "string",
          "example": "1º Ano - Técnico em Informática"
        },
        "teacherID": {
          "type": "string",
          "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "name",
        "teacherID",
        "active"
      ]
    },
    "TeamsRes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "name": {
            "type": "string",
            "example": "1º Ano - Técnico em Informática"
          },
          "teacherID": {
            "type": "string",
            "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "teacher": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "4531b848-15c8-4dfe-baf8-564491fd4a04"
              },
              "name": {
                "type": "string",
                "example": "Fulano da Silva Rodrigues"
              },
              "active": {
                "type": "boolean",
                "example": true
              }
            }
          }
        },
        "required": [
          "name",
          "teacherID",
          "active",
          "teacher"
        ]
      }
    },
    "Ask": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": " Aqui será informado uma pergunta "
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "image": {
          "type": "string",
          "example": "image.png"
        },
        "level": {
          "type": "string",
          "example": "INITIAL"
        },
        "answer": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Alternativa 1"
                  },
                  "correct": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "Ask2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "46e50259-ab8d-40e8-8c68-5fc81f604e43"
        },
        "question": {
          "type": "string",
          "example": " Aqui será informado uma pergunta "
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "image": {
          "type": "string",
          "example": "image.png"
        },
        "level": {
          "type": "string",
          "example": "INITIAL"
        }
      }
    },
    "AskResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "46e50259-ab8d-40e8-8c68-5fc81f604e43"
        },
        "question": {
          "type": "string",
          "example": " Aqui será informado uma pergunta "
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "image": {
          "type": "string",
          "example": "image.png"
        },
        "level": {
          "type": "string",
          "example": "INITIAL"
        },
        "answer": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "1651b180-597b-4689-a89c-7c3acfedc529"
              },
              "description": {
                "type": "string",
                "example": "Alternativa 1"
              },
              "correct": {
                "type": "boolean",
                "example": false
              },
              "askID": {
                "type": "string",
                "example": "46e50259-ab8d-40e8-8c68-5fc81f604e43"
              }
            }
          }
        }
      }
    },
    "AskChange": {
      "type": "object",
      "properties": {
        "askID": {
          "type": "string",
          "example": "46e50259-ab8d-40e8-8c68-5fc81f604e43"
        },
        "question": {
          "type": "string",
          "example": " Aqui será informado uma pergunta "
        },
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Answer": {
      "type": "object",
      "properties": {
        "askID": {
          "type": "string",
          "example": "031dd41f-15f2-490b-9eb4-99779b43480c"
        },
        "description": {
          "type": "string",
          "example": "Alternativa alterada"
        },
        "correct": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AnswerChange": {
      "type": "object",
      "properties": {
        "answerID": {
          "type": "string",
          "example": "031dd41f-15f2-490b-9eb4-99779b43480c"
        },
        "description": {
          "type": "string",
          "example": "Alternativa alterada"
        },
        "correct": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AnswerChangeRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "031dd41f-15f2-490b-9eb4-99779b43480c"
        },
        "description": {
          "type": "string",
          "example": "Alternativa alterada"
        },
        "correct": {
          "type": "boolean",
          "example": true
        },
        "askID": {
          "type": "string",
          "example": "031dd41f-15f2-490b-9eb4-99779b43480c"
        }
      }
    },
    "AskFindMany": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": " Aqui será informado uma pergunta "
        }
      }
    },
    "AskFindManyRes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "031dd41f-15f2-490b-9eb4-99779b43480c"
          },
          "question": {
            "type": "string",
            "example": " Aqui será informado uma pergunta "
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "level": {
            "type": "string",
            "example": "INITIAL"
          }
        }
      }
    }
  }
}